package ACADEMIA;

import Controlador.Conexionaca;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kt
 */
public class Tprofes extends javax.swing.JInternalFrame {

    Conexionaca con=new Conexionaca();
    Connection  cnn=con.Conexionacadb();
    PreparedStatement op=null;
    ResultSet rs=null;
    
    public Tprofes() {
        initComponents();
        cargatabla();
    }
    public void cargatabla(){
    DefaultTableModel tabla=new DefaultTableModel ();
        tabla.addColumn("Documento");
        tabla.addColumn("Nombre Profesor");
        tabla.addColumn("Apellido");
        tabla.addColumn("Categoria");
        tabla.addColumn("Salario");
        tabla.addColumn("Clave");
        profesor.setModel(tabla);
        String datos[]=new String[6];
        
        try{
         op=cnn.prepareStatement("SELECT *FROM Profesor");
         rs=op.executeQuery();
         while (rs.next()){
           datos[0]=rs.getString(1);
           datos[1]=rs.getString(2);
           datos[2]=rs.getString(3);
           datos[3]=rs.getString(4);
           datos[4]=rs.getString(5);
           datos[5]=rs.getString(6);
           tabla.addRow(datos);
         }
        } catch (Exception e) {
            System.out.print(e);
        }
}
     public void filtrar(){
    DefaultTableModel tabla=new DefaultTableModel ();
        tabla.addColumn("Documento");
        tabla.addColumn("Nombre Profesor");
        tabla.addColumn("Apellido");
        tabla.addColumn("Categoria");
        tabla.addColumn("Salario");
        tabla.addColumn("Clave");
        profesor.setModel(tabla);
        String datos[]=new String[6];
        
        try{
         op=cnn.prepareStatement("SELECT *FROM Profesor where Pro_doc_prof like '%"+FILTRO.getText()+"%' or  Pro_Nom like '%"+FILTRO.getText()+"%' or  Pro_Apell  like '%"+FILTRO.getText()+"%' or Pro_cate like '%"+FILTRO.getText()+"%' or Pro_sal like '%"+FILTRO.getText()+"%' or Pro_clave like '%"+FILTRO.getText()+"%'");
         rs=op.executeQuery();
         while (rs.next()){
           datos[0]=rs.getString(1);
           datos[1]=rs.getString(2);
           datos[2]=rs.getString(3);
           datos[3]=rs.getString(4);
           datos[4]=rs.getString(5);
           datos[5]=rs.getString(6);
           tabla.addRow(datos);
         }
        } catch (Exception e) {
            System.out.print(e);
        }
}
       public void listardatos(){
     
      int lis=profesor.getSelectedRow();
     if(lis>=0){ 
    DOC.setText(profesor.getValueAt(lis,0).toString());
    NOM.setText(profesor.getValueAt(lis,1).toString());
    APE.setText(profesor.getValueAt(lis,2).toString());
     CATE.setText(profesor.getValueAt(lis,3).toString());
     SAL.setText(profesor.getValueAt(lis,4).toString());
    CLAVE.setText(profesor.getValueAt(lis,5).toString());
     }
  }
  
      public void Registrar(){
        try {
            op=cnn.prepareStatement(" INSERT INTO Profesor( Pro_doc_prof , Pro_Nom , Pro_Apell  , Pro_cate , Pro_sal,Pro_clave) Values(?,?,?,?,?,?)");  
              op.setString(1,DOC.getText());
              op.setString(2,NOM.getText());
              op.setString(3,APE.getText());
              op.setInt(4,Integer.parseInt(CATE.getText()));
              op.setInt(5,Integer.parseInt(SAL.getText()));
              op.setString(6,CLAVE.getText());  
             op.executeUpdate();
             JOptionPane.showMessageDialog(null,"Datos Guardados");
             
        } catch (Exception e) {
            System.out.println("eee"+e);
        }
    
    }
     public void Eliminar(String dat){
    try {
   op=cnn.prepareStatement("DELETE from Profesor where Pro_doc_prof ='"+dat+"'");
      op.executeUpdate();
      JOptionPane.showMessageDialog(null,"Datos Eliminados");
        } catch (Exception e) {
             System.out.println("eee"+e);
        }
    
    } 
       public void modificar(String doc ,String nom, String ape,String cate,String sal,String cla){
        
        try {
         op=cnn.prepareStatement("UPDATE  Profesor set  Pro_Nom='"+nom+"',Pro_Apell='"+ape+"',Pro_cate='"+cate+"' , Pro_sal='"+sal+"',Pro_clave='"+cla+"' where Pro_doc_prof='"+doc+"'");
           op.executeUpdate();
            JOptionPane.showMessageDialog(null,"Datos modificados");
            
        } catch (Exception e) {
         System.out.println("eee"+e);  
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ingresar = new javax.swing.JButton();
        elim = new javax.swing.JButton();
        lim = new javax.swing.JButton();
        DOC = new javax.swing.JTextField();
        NOM = new javax.swing.JTextField();
        APE = new javax.swing.JTextField();
        CATE = new javax.swing.JTextField();
        SAL = new javax.swing.JTextField();
        CLAVE = new javax.swing.JTextField();
        FILTRO = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        profesor = new javax.swing.JTable();
        modi = new javax.swing.JButton();
        bus = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("PROFESORES");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DOCUMENTO");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 60, 90, 14);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("NOMBRE");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 90, 80, 14);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("APELLIDO");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 120, 90, 14);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CATEGORIA");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 150, 90, 20);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SALARIO");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 180, 90, 14);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("CLAVE");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 210, 50, 14);

        ingresar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ingresar.setForeground(new java.awt.Color(255, 0, 0));
        ingresar.setText("INGRESAR");
        ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarActionPerformed(evt);
            }
        });
        ingresar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ingresarKeyPressed(evt);
            }
        });
        getContentPane().add(ingresar);
        ingresar.setBounds(0, 0, 100, 20);

        elim.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        elim.setForeground(new java.awt.Color(255, 0, 0));
        elim.setText("ELIMINAR ");
        elim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elimActionPerformed(evt);
            }
        });
        elim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                elimKeyPressed(evt);
            }
        });
        getContentPane().add(elim);
        elim.setBounds(200, 0, 100, 20);

        lim.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lim.setForeground(new java.awt.Color(255, 0, 0));
        lim.setText("LIMPIAR");
        lim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limActionPerformed(evt);
            }
        });
        lim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                limKeyPressed(evt);
            }
        });
        getContentPane().add(lim);
        lim.setBounds(300, 0, 100, 20);

        DOC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DOC.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DOC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DOCKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DOCKeyPressed(evt);
            }
        });
        getContentPane().add(DOC);
        DOC.setBounds(190, 60, 160, 20);

        NOM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NOM.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        NOM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NOMKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NOMKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NOMKeyReleased(evt);
            }
        });
        getContentPane().add(NOM);
        NOM.setBounds(190, 90, 160, 20);

        APE.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        APE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        APE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                APEKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                APEKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                APEKeyReleased(evt);
            }
        });
        getContentPane().add(APE);
        APE.setBounds(190, 120, 160, 20);

        CATE.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CATE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CATE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CATEKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CATEKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CATEKeyReleased(evt);
            }
        });
        getContentPane().add(CATE);
        CATE.setBounds(190, 150, 160, 20);

        SAL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SAL.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SAL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SALKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SALKeyPressed(evt);
            }
        });
        getContentPane().add(SAL);
        SAL.setBounds(190, 180, 160, 20);

        CLAVE.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CLAVE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(CLAVE);
        CLAVE.setBounds(190, 210, 160, 20);
        getContentPane().add(FILTRO);
        FILTRO.setBounds(480, 0, 160, 20);

        profesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        profesor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profesorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(profesor);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 270, 630, 110);

        modi.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        modi.setForeground(new java.awt.Color(255, 0, 0));
        modi.setText("MODIFICAR");
        modi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modiActionPerformed(evt);
            }
        });
        modi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                modiKeyPressed(evt);
            }
        });
        getContentPane().add(modi);
        modi.setBounds(100, 0, 100, 20);

        bus.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        bus.setForeground(new java.awt.Color(204, 0, 0));
        bus.setText("BUSCAR");
        bus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                busMouseClicked(evt);
            }
        });
        bus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                busKeyReleased(evt);
            }
        });
        getContentPane().add(bus);
        bus.setBounds(400, 0, 80, 20);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/acade.jpg"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 0, 650, 410);

        pack();
    }// </editor-fold>                        

    private void ingresarActionPerformed(java.awt.event.ActionEvent evt) {                                         
      Registrar();
      cargatabla();
    }                                        

    private void elimActionPerformed(java.awt.event.ActionEvent evt) {                                     
        String dat=DOC.getText();
        Eliminar(dat);
        cargatabla();
    }                                    

    private void limActionPerformed(java.awt.event.ActionEvent evt) {                                    
      DOC.setText(null);
      NOM.setText(null);
      APE.setText(null);
      CATE.setText(null);
      SAL.setText(null);
      CLAVE.setText(null);
      FILTRO.setText(null);
    }                                   

    private void DOCKeyTyped(java.awt.event.KeyEvent evt) {                             
    char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    }                            
    }
    private void CATEKeyTyped(java.awt.event.KeyEvent evt) {                              
     char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    }                             
    }
    private void SALKeyTyped(java.awt.event.KeyEvent evt) {                             
   char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    }                            
    }
    private void NOMKeyTyped(java.awt.event.KeyEvent evt) {                             
   String texto=NOM.getText();
     if(texto.length()>0) {
         char primeraletra=texto.charAt(0);
         texto=Character.toUpperCase(primeraletra)+texto.substring(1, texto.length() );
       NOM.setText(texto);
     }
    
        char c=evt.getKeyChar();
     if (Character.isDigit(c)){
         evt.consume();
    }                            
 
    }
    private void APEKeyTyped(java.awt.event.KeyEvent evt) {                             
    String texto= APE.getText();
    if(texto.length()>0) {
         char primeraletra=texto.charAt(0);
         texto=Character.toUpperCase(primeraletra)+texto.substring(1, texto.length() );
        APE.setText(texto);
    }   
        
    char c=evt.getKeyChar();
     if (Character.isDigit(c)){
         evt.consume();
    }                            
    }
    private void modiActionPerformed(java.awt.event.ActionEvent evt) {                                     
        String d, n, a, c,s,cl;
       d=DOC.getText();
       n=NOM.getText();
       a=APE.getText();
       c=CATE.getText();
       s=SAL.getText();
       cl=CLAVE.getText();
        modificar(d, n, a, c,s,cl);
        cargatabla();
    }                                    

    private void NOMKeyReleased(java.awt.event.KeyEvent evt) {                                
      
    }                               
    
    private void DOCKeyPressed(java.awt.event.KeyEvent evt) {                               
    if(evt.getKeyCode()==evt.VK_ENTER){
    NOM.requestFocus();
    }                              
    }
    private void APEKeyReleased(java.awt.event.KeyEvent evt) {                                
       
    }                               
    
    private void CATEKeyReleased(java.awt.event.KeyEvent evt) {                                 
        // TODO add your handling code here:
    }                                

    private void APEKeyPressed(java.awt.event.KeyEvent evt) {                               
        if(evt.getKeyCode()==evt.VK_ENTER){
         CATE.requestFocus();
    }                              
    }
    private void NOMKeyPressed(java.awt.event.KeyEvent evt) {                               
    if(evt.getKeyCode()==evt.VK_ENTER){
        APE.requestFocus();
    }                              
    }
    private void CATEKeyPressed(java.awt.event.KeyEvent evt) {                                
        if(evt.getKeyCode()==evt.VK_ENTER){
      SAL.requestFocus();
    }                               
    }
    private void SALKeyPressed(java.awt.event.KeyEvent evt) {                               
      if(evt.getKeyCode()==evt.VK_ENTER){
        CLAVE.requestFocus();
    }                              
    }
    private void busKeyReleased(java.awt.event.KeyEvent evt) {                                
    
    }                               

    private void busMouseClicked(java.awt.event.MouseEvent evt) {                                 
     filtrar();
    }                                

    private void profesorMouseClicked(java.awt.event.MouseEvent evt) {                                      
    listardatos();
    }                                     

    private void ingresarKeyPressed(java.awt.event.KeyEvent evt) {                                    
    if(evt.getKeyCode()==evt.VK_TAB){
     modi.requestFocus();
    }
    }                                   

    private void modiKeyPressed(java.awt.event.KeyEvent evt) {                                
       if(evt.getKeyCode()==evt.VK_TAB){
   elim.requestFocus();
    }                               
    }
    private void elimKeyPressed(java.awt.event.KeyEvent evt) {                                
        if(evt.getKeyCode()==evt.VK_TAB){
   lim.requestFocus();
    }                               
    }
    private void limKeyPressed(java.awt.event.KeyEvent evt) {                               
      if(evt.getKeyCode()==evt.VK_ENTER){
  bus.requestFocus();
    }                              
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField APE;
    private javax.swing.JTextField CATE;
    private javax.swing.JTextField CLAVE;
    private javax.swing.JTextField DOC;
    private javax.swing.JTextField FILTRO;
    private javax.swing.JTextField NOM;
    private javax.swing.JTextField SAL;
    private javax.swing.JButton bus;
    private javax.swing.JButton elim;
    private javax.swing.JButton ingresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lim;
    private javax.swing.JButton modi;
    private javax.swing.JTable profesor;
    // End of variables declaration                   
}
package ACADEMIA;

import Controlador.Conexionaca;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kt
 */
public class Testudiante extends javax.swing.JInternalFrame {
  Conexionaca con=new Conexionaca();
    Connection  cnn=con.Conexionacadb();
    PreparedStatement op=null;
    ResultSet rs=null;
    
    public Testudiante() {
        initComponents();
        tablaestudiante();
    }
   public void tablaestudiante(){
     DefaultTableModel tabla=new DefaultTableModel ();
      tabla.addColumn("Documento");
      tabla.addColumn("Nombre Estudiante");
      tabla.addColumn("Apellido");
      tabla.addColumn("Edad");
      estudiante.setModel(tabla);
      String dato[]=new String[4];
      
       try {
        op=cnn.prepareStatement("SELECT * FROM estudiante");
        rs=op.executeQuery();
        while (rs.next()){
         dato[0]=rs.getString(1);
         dato[1]=rs.getString(2);
         dato[2]=rs.getString(3);
         dato[3]=rs.getString(4);  
         tabla.addRow(dato);
        }
       } catch (Exception e) {
        System.out.print(e);
   }
   }
    public void filtrar(){
     DefaultTableModel tabla=new DefaultTableModel ();
      tabla.addColumn("Documento");
      tabla.addColumn("Nombre Estudiante");
      tabla.addColumn("Apellido");
      tabla.addColumn("Edad");
      estudiante.setModel(tabla);
      String dato[]=new String[4];
      
       try {
        op=cnn.prepareStatement("SELECT * FROM estudiante  where Est_Doc like '%"+filtro.getText()+"%' or Est_Nom like '%"+filtro.getText()+"%' or  Est_Apell like '%"+filtro.getText()+"%' or Est_Edad  like '%"+filtro.getText()+"%'");
        rs=op.executeQuery();
        while (rs.next()){
         dato[0]=rs.getString(1);
         dato[1]=rs.getString(2);
         dato[2]=rs.getString(3);
         dato[3]=rs.getString(4);  
         tabla.addRow(dato);
        }
       } catch (Exception e) {
        System.out.print(e);
   }
   }
      public void listardatos(){
     
      int lis=estudiante.getSelectedRow();
     if(lis>=0){ 
    DOC.setText(estudiante.getValueAt(lis,0).toString());
    NOM.setText(estudiante.getValueAt(lis,1).toString());
    APE.setText(estudiante.getValueAt(lis,2).toString());
    EDAD.setText(estudiante.getValueAt(lis,3).toString());
     
     }
      }
    public void Registrar(){
        try {
            op=cnn.prepareStatement("INSERT INTO Estudiante(Est_Doc , Est_Nom , Est_Apell , Est_Edad) Values (?,?,?,?)");  
              op.setString(1,DOC.getText());
              op.setString(2,NOM.getText());
              op.setString(3,APE.getText());
              op.setInt(4,Integer.parseInt(EDAD.getText()));
             
             op.executeUpdate();
             JOptionPane.showMessageDialog(null,"Datos Guardados");
             
        } catch (Exception e) {
            System.out.println("eee"+e);
        }
    
    }
     public void Eliminar(String dat){
    try {
   op=cnn.prepareStatement("DELETE from  Estudiante WHERE Est_Doc ='"+dat+"'");
      op.executeUpdate();
      JOptionPane.showMessageDialog(null,"Datos Eliminados");
        } catch (Exception e) {
             System.out.println("eee"+e);
        }
     
     }
       public void modificar(String doc ,String nom, String ape,String eda){
        
        try {
         op=cnn.prepareStatement("UPDATE Estudiante set Est_Nom='"+nom+"' , Est_Apell='"+ape+"' , Est_Edad='"+eda+"' where Est_Doc ='"+doc+"'");
           op.executeUpdate();
            JOptionPane.showMessageDialog(null,"Datos modificados");
            
        } catch (Exception e) {
         System.out.println("error"+e);  
        }
    }
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        estudiante = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        NOM = new javax.swing.JTextField();
        APE = new javax.swing.JTextField();
        EDAD = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        DOC = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        filtro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("ESTUDIANTES");
        getContentPane().setLayout(null);

        estudiante.setBackground(new java.awt.Color(255, 204, 255));
        estudiante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        estudiante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                estudianteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(estudiante);
        estudiante.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 215, 665, 180);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DOCUMENTO");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(75, 27, 90, 15);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("NOMBRE");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 60, 90, 15);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("APELLIDO");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(70, 100, 90, 15);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("EDAD");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 140, 90, 15);

        NOM.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        NOM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NOM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NOMKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NOMKeyTyped(evt);
            }
        });
        getContentPane().add(NOM);
        NOM.setBounds(200, 60, 160, 21);

        APE.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        APE.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        APE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                APEKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                APEKeyTyped(evt);
            }
        });
        getContentPane().add(APE);
        APE.setBounds(200, 100, 160, 21);

        EDAD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        EDAD.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EDAD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EDADKeyTyped(evt);
            }
        });
        getContentPane().add(EDAD);
        EDAD.setBounds(200, 140, 70, 21);

        jButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 51));
        jButton1.setText("MODIFICAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(100, 0, 100, 20);

        jButton2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 51));
        jButton2.setText("ELIMINAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(200, 0, 90, 20);

        jButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 51));
        jButton3.setText("LIMPIAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(290, 0, 110, 20);

        DOC.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        DOC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DOC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DOCKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DOCKeyTyped(evt);
            }
        });
        getContentPane().add(DOC);
        DOC.setBounds(200, 30, 160, 20);

        jButton4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 0, 51));
        jButton4.setText("GUARDAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(10, 0, 89, 20);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 0, 0));
        jButton5.setText("BUSCAR");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(400, 0, 80, 20);
        getContentPane().add(filtro);
        filtro.setBounds(480, 0, 180, 20);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/academia.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-20, 0, 710, 430);

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    String d, n, a, e;
       d=DOC.getText();
       n=NOM.getText();
       a=APE.getText();
       e=EDAD.getText();
        modificar(d, n, a, e);
    tablaestudiante();
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    String dat=DOC.getText();
        Eliminar(dat);
        tablaestudiante();
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       DOC.setText(null);
       NOM.setText(null);
       APE.setText(null);
       EDAD.setText(null);
    }                                        

    private void NOMKeyTyped(java.awt.event.KeyEvent evt) {                             
    String texto= NOM.getText();
    if(texto.length()>0) {
         char primeraletra=texto.charAt(0);
         texto=Character.toUpperCase(primeraletra)+texto.substring(1, texto.length() );
       NOM.setText(texto);
    }   
        char c=evt.getKeyChar();
     if (Character.isDigit(c)){
         evt.consume();
    }                            
    }
    private void APEKeyTyped(java.awt.event.KeyEvent evt) {                             
      String texto= APE.getText();
    if(texto.length()>0) {
         char primeraletra=texto.charAt(0);
         texto=Character.toUpperCase(primeraletra)+texto.substring(1, texto.length() );
        APE.setText(texto);
      
    }
        
        char c=evt.getKeyChar();
     if (Character.isDigit(c)){
         evt.consume();
    }                            
    }
    private void EDADKeyTyped(java.awt.event.KeyEvent evt) {                              
  char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    
    }                             
    }
    private void DOCKeyTyped(java.awt.event.KeyEvent evt) {                             
      char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    }                            
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
      Registrar();
      tablaestudiante();
    }                                        

    private void DOCKeyPressed(java.awt.event.KeyEvent evt) {                               
      if(evt.getKeyCode()==evt.VK_ENTER){
        NOM.requestFocus();
      }
    }                              

    private void NOMKeyPressed(java.awt.event.KeyEvent evt) {                               
      if(evt.getKeyCode()==evt.VK_ENTER){
        APE.requestFocus();
    }                              
    }
    private void APEKeyPressed(java.awt.event.KeyEvent evt) {                               
       if(evt.getKeyCode()==evt.VK_ENTER){
        EDAD.requestFocus();
    }                              
    }
    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {                                    
      filtrar();
    }                                   

    private void estudianteMouseClicked(java.awt.event.MouseEvent evt) {                                        
     listardatos();
    }                                       

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {                                      
       filtrar();
    }                                     
 
    // Variables declaration - do not modify                     
    private javax.swing.JTextField APE;
    private javax.swing.JTextField DOC;
    private javax.swing.JTextField EDAD;
    private javax.swing.JTextField NOM;
    private javax.swing.JTable estudiante;
    private javax.swing.JTextField filtro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}
package ACADEMIA;

import Controlador.Conexionaca;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kt
 */
public class Tcurso extends javax.swing.JInternalFrame {

     Conexionaca con=new Conexionaca();
    Connection  cnn=con.Conexionacadb();
    PreparedStatement op=null;
    ResultSet rs=null;
    public Tcurso() {
     initComponents();
     tablacurso();
    }
  public void tablacurso(){
     DefaultTableModel tabla=new DefaultTableModel ();
      tabla.addColumn("Codigo Curso");
      tabla.addColumn("Nombre Curso");
      tabla.addColumn("Horas");
      tabla.addColumn("Valor del Curso");
      curso.setModel(tabla);
      String datos[]=new String[4];
      tabla.addRow(datos);
      
       try {
        op=cnn.prepareStatement("SELECT * FROM curso1");
        rs=op.executeQuery();
        while (rs.next()){
         datos[0]=rs.getString(1);
         datos[1]=rs.getString(2);
         datos[2]=rs.getString(3);
         datos[3]=rs.getString(4);  
         tabla.addRow(datos);
        }
       } catch (Exception e) {
        System.out.print(e);
   }
  }
   public void filtrar(){
     DefaultTableModel tabla=new DefaultTableModel ();
      tabla.addColumn("Codigo Curso");
      tabla.addColumn("Nombre Curso");
      tabla.addColumn("Horas");
      tabla.addColumn("Valor del Curso");
      curso.setModel(tabla);
      String datos[]=new String[4];
      tabla.addRow(datos);
      
       try {
        op=cnn.prepareStatement("SELECT * FROM curso1 where Cur_Cod like '%"+filtro.getText()+"%' or Cur_Nom like '%"+filtro.getText()+"%' or Cur_Horas like '%"+filtro.getText()+"%' or Cur_Valor like '%"+filtro.getText()+"%'");
        rs=op.executeQuery();
        while (rs.next()){
         datos[0]=rs.getString(1);
         datos[1]=rs.getString(2);
         datos[2]=rs.getString(3);
         datos[3]=rs.getString(4);  
         tabla.addRow(datos);
        }
       } catch (Exception e) {
        System.out.print(e);
   }
  }
   public void Registrar(){
        try {
            op=cnn.prepareStatement("INSERT INTO Curso1( Cur_Cod , Cur_Nom , Cur_Horas , Cur_Valor) Values (?,?,?,?)");  
              op.setInt(1,Integer.parseInt(COD.getText()));
              op.setString(2,NOM.getText());
              op.setInt(3,Integer.parseInt(HORAS.getText()));
              op.setInt(4,Integer.parseInt(VALOR.getText()));
             
             op.executeUpdate();
             JOptionPane.showMessageDialog(null,"Datos Guardados");
             
        } catch (Exception e) {
            System.out.println("eee"+e);
        }
    
    }
     public void Eliminar(String dat){
    try {
   op=cnn.prepareStatement("DELETE from  Curso1 WHERE Cur_Cod ='"+dat+"'");
      op.executeUpdate();
      JOptionPane.showMessageDialog(null,"Datos Eliminados");
        } catch (Exception e) {
             System.out.println("eee"+e);
        }
    
    } 
      public void modificar(String cod,String nom,String val,String hor){
        
        try {
         op=cnn.prepareStatement("UPDATE  Curso1 set Cur_Nom='"+nom+"',Cur_Horas='"+hor+"',Cur_Valor='"+val+"' where Cur_Cod='"+cod+"'");
           op.executeUpdate();
            JOptionPane.showMessageDialog(null,"Datos modificados");
            
        } catch (Exception e) {
         System.out.println("eee"+e);  
        }
    }
       public void listardatos(){
     
      int lis=curso.getSelectedRow();
     if(lis>=0){ 
     COD.setText(curso.getValueAt(lis,0).toString());
    NOM.setText(curso.getValueAt(lis,1).toString());
     HORAS.setText(curso.getValueAt(lis,2).toString());
     VALOR.setText(curso.getValueAt(lis,3).toString());
   
     }
     }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        curso = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mod = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        COD = new javax.swing.JTextField();
        NOM = new javax.swing.JTextField();
        HORAS = new javax.swing.JTextField();
        VALOR = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        filtro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("CURSO");
        getContentPane().setLayout(null);

        curso.setBackground(new java.awt.Color(255, 204, 255));
        curso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        curso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cursoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(curso);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 255, 550, 150);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CODIGO");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(47, 32, 90, 15);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("NOMBRE");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 70, 90, 15);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("HORAS");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 110, 90, 20);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("VALOR");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 150, 90, 15);

        mod.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        mod.setForeground(new java.awt.Color(255, 51, 51));
        mod.setText("MODIFICAR");
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });
        getContentPane().add(mod);
        mod.setBounds(100, 0, 100, 20);

        jButton2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 51, 51));
        jButton2.setText("ELIMINAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(200, 0, 100, 20);

        jButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 51, 51));
        jButton3.setText("LIMPIAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(300, 0, 100, 20);

        COD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        COD.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        COD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CODKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CODKeyTyped(evt);
            }
        });
        getContentPane().add(COD);
        COD.setBounds(160, 30, 140, 21);

        NOM.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        NOM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NOM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NOMKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NOMKeyTyped(evt);
            }
        });
        getContentPane().add(NOM);
        NOM.setBounds(160, 70, 240, 21);

        HORAS.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        HORAS.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        HORAS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                HORASKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HORASKeyTyped(evt);
            }
        });
        getContentPane().add(HORAS);
        HORAS.setBounds(160, 110, 140, 21);

        VALOR.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        VALOR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        VALOR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                VALORKeyTyped(evt);
            }
        });
        getContentPane().add(VALOR);
        VALOR.setBounds(160, 150, 140, 21);

        jButton4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 51, 51));
        jButton4.setText("GUARDAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(0, 0, 100, 20);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("BUSCAR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton1KeyReleased(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(400, 0, 80, 20);
        getContentPane().add(filtro);
        filtro.setBounds(480, 0, 140, 20);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/aca2.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 620, 430);

        pack();
    }// </editor-fold>                        

    private void modActionPerformed(java.awt.event.ActionEvent evt) {                                    
     String c, n, v, h;
       c=COD.getText();
       n=NOM.getText();
       v=VALOR.getText();
       h=HORAS.getText();   
        modificar(c, n, v, h);
       
        tablacurso();
    }                                   

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
      String dat=COD.getText();
        Eliminar(dat);
        tablacurso();
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
     COD.setText(null);
     NOM.setText(null);
     HORAS.setText(null);
     VALOR.setText(null);
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
     Registrar();
     tablacurso();
    }                                        

    private void CODKeyTyped(java.awt.event.KeyEvent evt) {                             
       char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    }                      
    }                            

    private void HORASKeyTyped(java.awt.event.KeyEvent evt) {                               
       char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    }                      
    }                              

    private void VALORKeyTyped(java.awt.event.KeyEvent evt) {                               
        char c=evt.getKeyChar();
     if (!Character.isDigit(c)){
         evt.consume();
    }                      
    }                              

    private void NOMKeyTyped(java.awt.event.KeyEvent evt) {                             
     String texto= NOM.getText();
    if(texto.length()>0) {
         char primeraletra=texto.charAt(0);
         texto=Character.toUpperCase(primeraletra)+texto.substring(1, texto.length() );
      NOM.setText(texto);
    }   
        char c=evt.getKeyChar();
     if (Character.isDigit(c)){
         evt.consume();
    }                      
    }                            

    private void CODKeyPressed(java.awt.event.KeyEvent evt) {                               
      if(evt.getKeyCode()==evt.VK_ENTER){
        NOM.requestFocus();
    }                              
    }
    private void NOMKeyPressed(java.awt.event.KeyEvent evt) {                               
    if(evt.getKeyCode()==evt.VK_ENTER){
       HORAS.requestFocus();
    }                              
    }
    private void HORASKeyPressed(java.awt.event.KeyEvent evt) {                                 
       if(evt.getKeyCode()==evt.VK_ENTER){
       VALOR.requestFocus();
    }                                
    }
    private void cursoMouseClicked(java.awt.event.MouseEvent evt) {                                   
      listardatos();
    }                                  

    private void jButton1KeyReleased(java.awt.event.KeyEvent evt) {                                     
        filtrar();
    }                                    

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
    filtrar();
    }                                     
    

    // Variables declaration - do not modify                     
    private javax.swing.JTextField COD;
    private javax.swing.JTextField HORAS;
    private javax.swing.JTextField NOM;
    private javax.swing.JTextField VALOR;
    private javax.swing.JTable curso;
    private javax.swing.JTextField filtro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mod;
    // End of variables declaration                   
}
package ACADEMIA;

import Controlador.Conexionaca;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kt
 */
public class TEstxcurso extends javax.swing.JInternalFrame {

  
     Conexionaca con=new Conexionaca();
    Connection  cnn=con.Conexionacadb();
    PreparedStatement op=null;
    ResultSet rs=null;
    public TEstxcurso() {
        initComponents();
        tablaestxcurso();
        cargarcombo();
        cargarcodigo();
    }
public void tablaestxcurso(){
     DefaultTableModel tabla=new DefaultTableModel ();
      tabla.addColumn("Codigo Curso");
      tabla.addColumn("Documento Estudiante");
      tabla.addColumn("Fecha de Inicio");
      estxcur.setModel(tabla);
      String datos[]=new String[3];
      tabla.addRow(datos);
      
       try {
        op=cnn.prepareStatement("SELECT * FROM estudiantexcurso1");
        rs=op.executeQuery();
        while (rs.next()){
         datos[0]=rs.getString(1);
         datos[1]=rs.getString(2);
         datos[2]=rs.getString(3); 
         tabla.addRow(datos);
        }
       } catch (Exception e) {
        System.out.print(e);
   }
}
  public void listardatos(){
      int lis=estxcur.getSelectedRow();
     if(lis>=0){ 
     COD.setSelectedItem(estxcur.getValueAt(lis,0).toString());
     DOCU.setSelectedItem(estxcur.getValueAt(lis,1).toString());
     FECHA.setText(estxcur.getValueAt(lis,2).toString());
     
     }
  }
public void filtrar(){
     DefaultTableModel tabla=new DefaultTableModel ();
      tabla.addColumn("Codigo Curso");
      tabla.addColumn("Documento Estudiante");
      tabla.addColumn("Fecha de Inicio");
      estxcur.setModel(tabla);
      String datos[]=new String[3];
      tabla.addRow(datos);
      
       try {
        op=cnn.prepareStatement("SELECT * FROM estudiantexcurso1 where Estcur_Cur_Cod like '%"+filtro.getText()+"%' or Estcur_Doc_Est like '%"+filtro.getText()+"%'or Estcur_fec_Ini like '%"+filtro.getText()+"%'");
        rs=op.executeQuery();
        while (rs.next()){
         datos[0]=rs.getString(1);
         datos[1]=rs.getString(2);
         datos[2]=rs.getString(3); 
         tabla.addRow(datos);
        }
       } catch (Exception e) {
        System.out.print(e);
   }
}
public void Registrar(){
        try {
            op=cnn.prepareStatement("INSERT INTO ESTUDIANTEXCURSO1(Estcur_Cur_Cod,Estcur_Doc_Est,Estcur_fec_Ini) Values ( ?,?,?)");  
              op.setInt(1,Integer.parseInt(COD.getSelectedItem().toString()));
              op.setString(2,DOCU.getSelectedItem().toString());
              op.setString(3,FECHA.getText());
             op.executeUpdate();
             JOptionPane.showMessageDialog(null,"Datos Guardados");
             
        } catch (Exception e) {
            System.out.println("error"+e);
        }
    
    }
     public void Eliminar(String dat){
    try {
   op=cnn.prepareStatement("DELETE from ESTUDIANTEXCURSO1 WHERE Estcur_Cur_Cod='"+dat+"'");
      op.executeUpdate();
      JOptionPane.showMessageDialog(null,"Datos Eliminados");
        } catch (Exception e) {
             System.out.println("error"+e);
        }
    } 
     public void cargarcombo(){
        try {
            DOCU.removeAll();
            DOCU.addItem("SELECCIONE DOCUMENTO");
          op=cnn.prepareStatement("Select Est_Doc from  Estudiante ");
          rs=op.executeQuery();
         while(rs.next()){
             String aux=rs.getString("Est_Doc");
             this.DOCU.addItem(aux);
         }
  
        } catch (Exception e) {
        }
     }
   public void cargarcodigo(){
        try {
            COD.removeAll();
            COD.addItem("SELECCIONE CODIGO");
          op=cnn.prepareStatement("Select Cur_Cod  from Curso1 ");
          rs=op.executeQuery();
         while(rs.next()){
             String aux=rs.getString("Cur_Cod");
             this.COD.addItem(aux);
         }
  
        } catch (Exception e) {
        }
     }
     public void modificar(String da,String doc, String FE ){
        
        try {
         op=cnn.prepareStatement("UPDATE  ESTUDIANTEXCURSO1 set Estcur_fec_Ini='"+FE+"',Estcur_Doc_Est='"+doc+"' where Estcur_Cur_Cod='"+da+"'");
           op.executeUpdate();
            JOptionPane.showMessageDialog(null,"Datos modificados");
            
        } catch (Exception e) {
         System.out.println("eee"+e);  
        }
     }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        FECHA = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        DOCU = new javax.swing.JComboBox<>();
        COD = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        filtro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        estxcur = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("ESTUDIANTE X CURSO");
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CODIGO CURSO");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(65, 42, 100, 20);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DOCUMENTO ESTUDIANTE");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(14, 84, 160, 20);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("FECHA INICIO");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(64, 124, 100, 20);

        FECHA.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        FECHA.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FECHA.setToolTipText("");
        FECHA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FECHAKeyTyped(evt);
            }
        });
        getContentPane().add(FECHA);
        FECHA.setBounds(200, 120, 180, 30);

        jButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 153));
        jButton1.setText("GUARDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(0, 0, 100, 20);

        jButton2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 153));
        jButton2.setText("ELIMINAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(200, 0, 100, 20);

        jButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 153));
        jButton3.setText("LIMPÌAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(300, 0, 100, 20);

        DOCU.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DOCU.setForeground(new java.awt.Color(255, 0, 0));
        DOCU.setToolTipText("");
        DOCU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DOCUKeyPressed(evt);
            }
        });
        getContentPane().add(DOCU);
        DOCU.setBounds(200, 80, 180, 30);

        COD.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        COD.setForeground(new java.awt.Color(255, 0, 0));
        COD.setToolTipText("");
        COD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CODKeyPressed(evt);
            }
        });
        getContentPane().add(COD);
        COD.setBounds(200, 40, 180, 30);

        jButton4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 0, 153));
        jButton4.setText("MODIFICAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(100, 0, 100, 20);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setForeground(new java.awt.Color(255, 0, 204));
        jButton5.setText("BUSCAR");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(400, 0, 80, 20);
        getContentPane().add(filtro);
        filtro.setBounds(480, 0, 150, 20);

        estxcur.setBackground(new java.awt.Color(255, 204, 255));
        estxcur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        estxcur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                estxcurMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(estxcur);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 200, 561, 140);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/acade.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 630, 380);

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
      Registrar();
      tablaestxcurso();
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       String dat=COD.getSelectedItem().toString();
        Eliminar(dat);
        tablaestxcurso();
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
     COD.removeAllItems();
     cargarcodigo();
      DOCU.removeAllItems();
     cargarcombo();
     FECHA.setText(null);
    }                                        
        
    private void FECHAKeyTyped(java.awt.event.KeyEvent evt) {                               
       char caracter=evt.getKeyChar();
        if(((caracter < '0') || (caracter > '9')) &&(caracter !='-')){ 
              evt.consume();
        }     
    }                              

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
      String d,da,f;
      d=COD.getSelectedItem().toString();
      da=DOCU.getSelectedItem().toString();
       f=FECHA.getText();
        modificar(d, da, f);
        tablaestxcurso();
    }                                        

    private void CODKeyPressed(java.awt.event.KeyEvent evt) {                               
        if(evt.getKeyCode()==evt.VK_ENTER){
        DOCU.requestFocus();
    }                            
    }                              

    private void DOCUKeyPressed(java.awt.event.KeyEvent evt) {                                
         if(evt.getKeyCode()==evt.VK_ENTER){
        FECHA.requestFocus();
    }                            
    }                               

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {                                      
  filtrar();
    }                                     

    private void estxcurMouseClicked(java.awt.event.MouseEvent evt) {                                     
    listardatos();
    }                                    
    
    
    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> COD;
    private javax.swing.JComboBox<String> DOCU;
    private javax.swing.JTextField FECHA;
    private javax.swing.JTable estxcur;
    private javax.swing.JTextField filtro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}
package ACADEMIA;

import Vista.MenuPrincipal;

/**
 *
 * @author kt
 */
public class Macademia extends javax.swing.JFrame {

    /**
     * Creates new form Macademia
     */
    public Macademia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        ESCRITORIO = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        ESCRITORIO.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/academia.jpg"))); // NOI18N

        ESCRITORIO.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ESCRITORIOLayout = new javax.swing.GroupLayout(ESCRITORIO);
        ESCRITORIO.setLayout(ESCRITORIOLayout);
        ESCRITORIOLayout.setHorizontalGroup(
            ESCRITORIOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ESCRITORIOLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ESCRITORIOLayout.setVerticalGroup(
            ESCRITORIOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ESCRITORIOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        getContentPane().add(ESCRITORIO);
        ESCRITORIO.setBounds(0, 0, 820, 730);

        jMenu1.setForeground(new java.awt.Color(204, 0, 0));
        jMenu1.setText("TABLAS ACADEMIA");

        jMenuItem1.setText("Tabla Profesor");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator2);

        jMenuItem2.setText("Tabla Estudiante");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator3);

        jMenuItem3.setText("Tabla Curso");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator4);

        jMenuItem4.setText("Tabla EstuxCurso");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator6);

        jMenuItem6.setText("MENU PRINCIPAL");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);
        jMenu1.add(jSeparator5);
        jMenu1.add(jSeparator1);

        jMenuItem5.setText("Salir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      Tprofes ca=new Tprofes();
      ESCRITORIO.add(ca);
      ca.setVisible(true);
    }                                          

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      Testudiante ca=new Testudiante();
      ESCRITORIO.add(ca);
      ca.setVisible(true);
    }                                          

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      Tcurso ca=new Tcurso();
      ESCRITORIO.add(ca);
      ca.setVisible(true);
    }                                          

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
     TEstxcurso ca=new TEstxcurso();
     ESCRITORIO.add(ca);
     ca.setVisible(true);
    }                                          

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      System.exit(WIDTH);
    }                                          

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {                                           
 MenuPrincipal op=new MenuPrincipal();
      op.setLocationRelativeTo(null);
      op.setSize(460,425);
      op.setVisible(true);
      op.setVisible(true);
      dispose();
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Macademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Macademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Macademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Macademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Macademia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JDesktopPane ESCRITORIO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    // End of variables declaration                   
}
package ACADEMIA;

import Controlador.Conexionaca;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author kt
 */
public class Loginacademia extends javax.swing.JFrame {
    Conexionaca con=new Conexionaca();
    Connection cnn=con.Conexionacadb(); 
    
    public Loginacademia() {
        initComponents();
    }
public void validarusuario(String pro,String clav ){
    PreparedStatement op=null;
        ResultSet rs=null;
        try{
            
        op=cnn.prepareStatement("SELECT *FROM  profesor WHERE Pro_Nom ='"+pro+"'AND Pro_clave ='"+clav+"'");
        rs=op.executeQuery();
        if(rs.next()){
          Macademia cap=new Macademia();
          cap.setLocationRelativeTo(null);
          cap.setSize(800,600);
            cap.setVisible(true);
            
            dispose();
        }
        else{
            JOptionPane.showMessageDialog(null,"Datos no Validos");
        }
        }
        catch (Exception e){
            System.out.print("Error"+e);
        }
}
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        usua = new javax.swing.JTextField();
        clave = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("LOGIN");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(120, 50, 69, 35);

        jButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 0, 255));
        jButton1.setText("INGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(93, 203, 130, 65);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 255));
        jLabel2.setText("USUARIO");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(65, 105, 52, 15);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 255));
        jLabel3.setText("CONTRASEÑA");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(56, 147, 79, 15);

        usua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usuaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usuaKeyTyped(evt);
            }
        });
        getContentPane().add(usua);
        usua.setBounds(139, 103, 124, 20);

        clave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                claveKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                claveKeyTyped(evt);
            }
        });
        getContentPane().add(clave);
        clave.setBounds(139, 145, 124, 20);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/LOGIN2.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 310, 300);

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    String p,c;
    p=usua.getText();
    c=clave.getText();
        validarusuario(p, c);
    }                                        

    private void usuaKeyTyped(java.awt.event.KeyEvent evt) {                              
  
    }                             

    private void claveKeyTyped(java.awt.event.KeyEvent evt) {                               

    }                              

    private void usuaKeyPressed(java.awt.event.KeyEvent evt) {                                
       if(evt.getKeyCode()==evt.VK_ENTER){
 clave.requestFocus();
   }
    }                               

    private void claveKeyPressed(java.awt.event.KeyEvent evt) {                                 
       if(evt.getKeyCode()==evt.VK_ENTER){
   jButton1.requestFocus();
   }
    }                                

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {                                    
  if(evt.getKeyCode()==evt.VK_ENTER){
   jButton1.doClick();
   }
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loginacademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loginacademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loginacademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loginacademia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loginacademia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPasswordField clave;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField usua;
    // End of variables declaration                   
}
